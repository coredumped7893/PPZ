-- MySQL Script generated by MySQL Workbench
-- wto, 19 maj 2020, 15:16:47
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ppz
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ppz
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ppz` DEFAULT CHARACTER SET utf8 COLLATE utf8_polish_ci ;
USE `ppz` ;

-- -----------------------------------------------------
-- Table `ppz`.`user_role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`user_role` (
  `name` VARCHAR(200) NOT NULL,
  `display_name` VARCHAR(255) NULL,
  PRIMARY KEY (`name`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`user` (
  `username` VARCHAR(255) NOT NULL,
  `email` VARCHAR(255) NULL,
  `password` VARCHAR(255) NOT NULL,
  `create_time` DATETIME NULL,
  `last_succ_login` DATETIME NULL,
  `last_err_login` DATETIME NULL,
  `activated` TINYINT(1) NULL DEFAULT 0,
  `user_role_name` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`username`),
  UNIQUE INDEX `email_k` (`email` ASC),
  INDEX `fk_user_user_role1_idx` (`user_role_name` ASC),
  CONSTRAINT `fk_user_user_role1`
    FOREIGN KEY (`user_role_name`)
    REFERENCES `ppz`.`user_role` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `ppz`.`action_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`action_list` (
  `action_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`action_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`user_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`user_log` (
  `event_id` INT NOT NULL,
  `action_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `time` DATETIME NOT NULL,
  PRIMARY KEY (`event_id`),
  INDEX `fk_user_log_1_idx` (`action_id` ASC),
  CONSTRAINT `fk_user_log_action_list`
    FOREIGN KEY (`action_id`)
    REFERENCES `ppz`.`action_list` (`action_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'for debbuging purposes\n';


-- -----------------------------------------------------
-- Table `ppz`.`authtoken`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`authtoken` (
  `id` INT NOT NULL,
  `username` VARCHAR(255) NOT NULL,
  `token` VARCHAR(128) NOT NULL,
  `salt` VARCHAR(128) NOT NULL,
  `lastuse` DATETIME NULL,
  `useragent` VARCHAR(200) NULL,
  `ip` VARCHAR(45) NULL,
  `validity` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_authtoken_1_idx` (`username` ASC),
  CONSTRAINT `fk_authtoken_user`
    FOREIGN KEY (`username`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'For accessing API protected data\n';


-- -----------------------------------------------------
-- Table `ppz`.`locale_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`locale_list` (
  `id` INT NOT NULL,
  `code` VARCHAR(5) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`user_config_`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`user_config_` (
  `id` INT NOT NULL,
  `user_username` VARCHAR(255) NOT NULL,
  `max_login_att` SMALLINT(5) NOT NULL DEFAULT 5,
  `max_api_calls_per_hr` INT NOT NULL DEFAULT 1000,
  `locale_list_id` INT NOT NULL,
  `login_locked` DATETIME NULL,
  `last_api_call` DATETIME NULL,
  `last_game_played` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_config__user1_idx` (`user_username` ASC),
  INDEX `fk_user_config__locale_list1_idx` (`locale_list_id` ASC),
  CONSTRAINT `fk_user_config__user1`
    FOREIGN KEY (`user_username`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_config__locale_list1`
    FOREIGN KEY (`locale_list_id`)
    REFERENCES `ppz`.`locale_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`theme`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`theme` (
  `id` INT NOT NULL,
  `display_name` VARCHAR(45) NOT NULL,
  `config` TEXT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`options`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`options` (
  `id` INT NOT NULL,
  `maintenance_mode` TINYINT(1) NOT NULL DEFAULT 0,
  `locale_list_id` INT NOT NULL,
  `admin_mail` VARCHAR(255) NULL DEFAULT 'kontakt@domena.pl',
  `ado_mail` VARCHAR(255) NULL DEFAULT 'ado@domena.pl' COMMENT 'Administrator danych osobowych mail',
  `theme` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `fk_options_1_idx` (`theme` ASC),
  INDEX `fk_options_locale_list1_idx` (`locale_list_id` ASC),
  CONSTRAINT `fk_options_1`
    FOREIGN KEY (`theme`)
    REFERENCES `ppz`.`theme` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_options_locale_list1`
    FOREIGN KEY (`locale_list_id`)
    REFERENCES `ppz`.`locale_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`mailer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`mailer` (
  `id` INT NOT NULL,
  `host` VARCHAR(255) NULL,
  `username` VARCHAR(255) NULL,
  `password` VARCHAR(255) NULL,
  `port` INT NULL,
  `authtype` VARCHAR(100) NULL,
  `clientid` VARCHAR(255) NULL,
  `clientsecret` VARCHAR(255) NULL,
  `refreshtoken` VARCHAR(255) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`ipban`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`ipban` (
  `ip` INT NOT NULL,
  `date` DATETIME NOT NULL,
  `reason` TEXT NOT NULL DEFAULT '----',
  PRIMARY KEY (`ip`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`account_ban`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`account_ban` (
  `id` INT NOT NULL,
  `user_username` VARCHAR(255) NOT NULL,
  `reason` TEXT NULL,
  `validity` DATETIME NULL,
  PRIMARY KEY (`id`, `user_username`),
  INDEX `fk_account_ban_user1_idx` (`user_username` ASC),
  CONSTRAINT `fk_account_ban_user1`
    FOREIGN KEY (`user_username`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`game`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`game` (
  `name` VARCHAR(255) NOT NULL COMMENT 'no spaces nor special chars\n',
  `owner` VARCHAR(255) NOT NULL,
  `display_name` VARCHAR(255) NOT NULL,
  `description` TEXT NOT NULL,
  `icon` VARCHAR(255) NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'offline' COMMENT '(online,offline,pending)',
  `config` TEXT NULL COMMENT 'custom config file \n',
  `data` VARCHAR(45) NULL,
  PRIMARY KEY (`name`),
  INDEX `fk_game_user1_idx` (`owner` ASC),
  CONSTRAINT `fk_game_user1`
    FOREIGN KEY (`owner`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`session`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`session` (
  `id` VARCHAR(16) NOT NULL,
  `username` VARCHAR(255) NOT NULL,
  `ip` VARCHAR(45) NOT NULL,
  `user_agent` VARCHAR(255) NOT NULL,
  `last_activity` INT NOT NULL DEFAULT 0 COMMENT 'timestamp\n',
  PRIMARY KEY (`id`),
  INDEX `fk_session_user1_idx` (`username` ASC),
  CONSTRAINT `fk_session_user1`
    FOREIGN KEY (`username`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Will be changed; depends on framework';


-- -----------------------------------------------------
-- Table `ppz`.`game_room`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`game_room` (
  `id` INT NOT NULL,
  `game_name` VARCHAR(255) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `owner` VARCHAR(255) NOT NULL,
  `icon` VARCHAR(255) NULL COMMENT 'Feature for vip users ?',
  `max_players` INT NOT NULL DEFAULT '1',
  `players` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`, `game_name`),
  INDEX `fk_game_room_user1_idx` (`owner` ASC),
  INDEX `fk_game_room_game1_idx` (`game_name` ASC),
  CONSTRAINT `fk_game_room_user1`
    FOREIGN KEY (`owner`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_game_room_game1`
    FOREIGN KEY (`game_name`)
    REFERENCES `ppz`.`game` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Every logged in user can host (one) game room';


-- -----------------------------------------------------
-- Table `ppz`.`room_player`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`room_player` (
  `game_room_id` INT NOT NULL,
  `game_room_game_name` VARCHAR(255) NOT NULL,
  `user_username` VARCHAR(255) NOT NULL,
  `joined` DATETIME NOT NULL,
  `observer` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`game_room_id`, `game_room_game_name`),
  INDEX `fk_room_player_user1_idx` (`user_username` ASC),
  CONSTRAINT `fk_room_player_game_room1`
    FOREIGN KEY (`game_room_id` , `game_room_game_name`)
    REFERENCES `ppz`.`game_room` (`id` , `game_name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_room_player_user1`
    FOREIGN KEY (`user_username`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Holds users that joined some room, only one session can be assigned to given room at the same time';


-- -----------------------------------------------------
-- Table `ppz`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`category` (
  `id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `display_name` VARCHAR(255) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`thread`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`thread` (
  `id` INT NOT NULL,
  `owner` VARCHAR(255) NOT NULL,
  `category_id` INT NOT NULL,
  `name` VARCHAR(255) NOT NULL,
  `display_name` VARCHAR(255) NOT NULL,
  `created` DATETIME NOT NULL,
  `last_activity` DATETIME NOT NULL,
  `enabled` TINYINT(1) NOT NULL DEFAULT 1,
  `pinned` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_thread_user1_idx` (`owner` ASC),
  INDEX `fk_thread_category1_idx` (`category_id` ASC),
  CONSTRAINT `fk_thread_user1`
    FOREIGN KEY (`owner`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_thread_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `ppz`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`post`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`post` (
  `id` INT NOT NULL,
  `user_username` VARCHAR(255) NOT NULL,
  `thread_id` INT NOT NULL,
  `created` DATETIME NOT NULL,
  `time` INT NOT NULL COMMENT 'creation timestamp\n',
  `content` TEXT NOT NULL,
  `edited` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_post_user1_idx` (`user_username` ASC),
  INDEX `fk_post_thread1_idx` (`thread_id` ASC),
  CONSTRAINT `fk_post_user1`
    FOREIGN KEY (`user_username`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_post_thread1`
    FOREIGN KEY (`thread_id`)
    REFERENCES `ppz`.`thread` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`forum_ban`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`forum_ban` (
  `id` INT NOT NULL,
  `user_username` VARCHAR(255) NOT NULL,
  `date` DATETIME NOT NULL,
  `validity` DATETIME NOT NULL,
  `reason` TEXT NULL,
  PRIMARY KEY (`id`, `user_username`),
  INDEX `fk_forum_ban_user1_idx` (`user_username` ASC),
  CONSTRAINT `fk_forum_ban_user1`
    FOREIGN KEY (`user_username`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`game_ban`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`game_ban` (
  `game_name` VARCHAR(255) NOT NULL,
  `user_username` VARCHAR(255) NOT NULL,
  `date` DATETIME NOT NULL,
  `validity` DATETIME NOT NULL,
  `reason` TEXT NOT NULL,
  PRIMARY KEY (`game_name`, `user_username`),
  INDEX `fk_game_ban_user1_idx` (`user_username` ASC),
  CONSTRAINT `fk_game_ban_game1`
    FOREIGN KEY (`game_name`)
    REFERENCES `ppz`.`game` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_game_ban_user1`
    FOREIGN KEY (`user_username`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`room_chat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`room_chat` (
  `id` INT NOT NULL,
  `from` VARCHAR(255) NOT NULL,
  `to` VARCHAR(255) NOT NULL,
  `message` TEXT NOT NULL,
  `sent` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_room_chat_user1_idx` (`from` ASC),
  INDEX `fk_room_chat_user2_idx` (`to` ASC),
  CONSTRAINT `fk_room_chat_user1`
    FOREIGN KEY (`from`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_room_chat_user2`
    FOREIGN KEY (`to`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`user_chat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`user_chat` (
  `id` INT NOT NULL,
  `from` VARCHAR(255) NOT NULL,
  `to` VARCHAR(255) NOT NULL,
  `message` TEXT NOT NULL,
  `sent` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_user_chat_user1_idx` (`from` ASC),
  INDEX `fk_user_chat_user2_idx` (`to` ASC),
  CONSTRAINT `fk_user_chat_user1`
    FOREIGN KEY (`from`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_chat_user2`
    FOREIGN KEY (`to`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`payment_log`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`payment_log` (
  `id` INT NOT NULL,
  `paying_user` VARCHAR(255) NOT NULL,
  `payment_id` VARCHAR(100) NOT NULL,
  `status` VARCHAR(45) NOT NULL DEFAULT 'open',
  `date` DATETIME NOT NULL,
  `value` DECIMAL(5,2) NOT NULL,
  `invoice` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `payment_id_UNIQUE` (`payment_id` ASC),
  INDEX `fk_payment_log_user1_idx` (`paying_user` ASC),
  CONSTRAINT `fk_payment_log_user1`
    FOREIGN KEY (`paying_user`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`invoice`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`invoice` (
  `id` INT NOT NULL,
  `username` VARCHAR(255) NOT NULL,
  `value` DECIMAL(5,2) NOT NULL,
  `created` DATETIME NOT NULL,
  `document` VARCHAR(45) NULL COMMENT 'as html or xml',
  PRIMARY KEY (`id`),
  INDEX `fk_invoice_user1_idx` (`username` ASC),
  CONSTRAINT `fk_invoice_user1`
    FOREIGN KEY (`username`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`product_service`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`product_service` (
  `id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `display_name` VARCHAR(50) NOT NULL,
  `description` TEXT NOT NULL,
  `enabled` TINYINT(1) NOT NULL DEFAULT 1,
  `price` DECIMAL(5,2) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Holds names of products or services that users are able to buy.';


-- -----------------------------------------------------
-- Table `ppz`.`friend`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`friend` (
  `id` INT NOT NULL,
  `user_inviting` VARCHAR(255) NOT NULL,
  `user_invited` VARCHAR(255) NOT NULL,
  `created` DATETIME NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_friend_user1_idx` (`user_inviting` ASC),
  INDEX `fk_friend_user2_idx` (`user_invited` ASC),
  CONSTRAINT `fk_friend_user1`
    FOREIGN KEY (`user_inviting`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_friend_user2`
    FOREIGN KEY (`user_invited`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`skin_list`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`skin_list` (
  `id` INT NOT NULL,
  `name` VARCHAR(55) NOT NULL,
  `path` VARCHAR(100) NOT NULL,
  `icon` VARCHAR(100) NOT NULL COMMENT 'path to icon for web display',
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`item` (
  `id` INT NOT NULL,
  `name` VARCHAR(50) NOT NULL,
  `description` TEXT NULL,
  `skin_list_id` INT NOT NULL,
  `created` DATETIME NOT NULL,
  `tradable` TINYINT NOT NULL DEFAULT 1,
  `marketable` TINYINT NOT NULL DEFAULT 1,
  `skin_type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_item_skin_list1_idx` (`skin_list_id` ASC),
  CONSTRAINT `fk_item_skin_list1`
    FOREIGN KEY (`skin_list_id`)
    REFERENCES `ppz`.`skin_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`trade`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`trade` (
  `id` INT NOT NULL,
  `created` DATETIME NOT NULL,
  `finished` DATETIME NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB
COMMENT = 'Logical group of all items that are being traded';


-- -----------------------------------------------------
-- Table `ppz`.`trades_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`trades_data` (
  `id` INT NOT NULL,
  `item_id` INT NOT NULL,
  `from` VARCHAR(255) NOT NULL,
  `to` VARCHAR(255) NOT NULL,
  `trade_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_trades_item1_idx` (`item_id` ASC),
  INDEX `fk_trades_user1_idx` (`from` ASC),
  INDEX `fk_trades_user2_idx` (`to` ASC),
  INDEX `fk_trades_data_trade1_idx` (`trade_id` ASC),
  CONSTRAINT `fk_trades_item1`
    FOREIGN KEY (`item_id`)
    REFERENCES `ppz`.`item` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_trades_user1`
    FOREIGN KEY (`from`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_trades_user2`
    FOREIGN KEY (`to`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_trades_data_trade1`
    FOREIGN KEY (`trade_id`)
    REFERENCES `ppz`.`trade` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`inventory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`inventory` (
  `id` INT NOT NULL,
  `item_id` INT NOT NULL,
  `user_username` VARCHAR(255) NOT NULL,
  `added` DATETIME NOT NULL,
  PRIMARY KEY (`id`, `item_id`, `user_username`),
  INDEX `fk_inventory_item1_idx` (`item_id` ASC),
  INDEX `fk_inventory_user1_idx` (`user_username` ASC),
  CONSTRAINT `fk_inventory_item1`
    FOREIGN KEY (`item_id`)
    REFERENCES `ppz`.`item` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_inventory_user1`
    FOREIGN KEY (`user_username`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Maps users to items';


-- -----------------------------------------------------
-- Table `ppz`.`game_stats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`game_stats` (
  `game_name` VARCHAR(255) NOT NULL,
  `data` TEXT NOT NULL,
  `last_access` DATETIME NOT NULL,
  `last_edit` DATETIME NOT NULL,
  PRIMARY KEY (`game_name`),
  CONSTRAINT `fk_game_stats_game1`
    FOREIGN KEY (`game_name`)
    REFERENCES `ppz`.`game` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'Stats for each game played: connects game with player, maybe data as JSON text field ?';


-- -----------------------------------------------------
-- Table `ppz`.`player_stats`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`player_stats` (
  `user_username` VARCHAR(255) NOT NULL,
  `game_name` VARCHAR(255) NOT NULL,
  `data` TEXT NOT NULL,
  `last_access` DATETIME NOT NULL,
  `last_edit` DATETIME NOT NULL,
  PRIMARY KEY (`user_username`, `game_name`),
  INDEX `fk_player_stats_game1_idx` (`game_name` ASC),
  CONSTRAINT `fk_player_stats_user1`
    FOREIGN KEY (`user_username`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_player_stats_game1`
    FOREIGN KEY (`game_name`)
    REFERENCES `ppz`.`game` (`name`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB
COMMENT = 'General profile stats: games played, hours spent, win ratio, messages sent etc.';


-- -----------------------------------------------------
-- Table `ppz`.`locale_data`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`locale_data` (
  `locale_list_id` INT NOT NULL,
  `data_short` TEXT NOT NULL,
  `data_long` TEXT NOT NULL,
  PRIMARY KEY (`locale_list_id`),
  CONSTRAINT `fk_locale_data_locale_list1`
    FOREIGN KEY (`locale_list_id`)
    REFERENCES `ppz`.`locale_list` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ppz`.`table1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`table1` (
  `idtable1` INT NOT NULL,
  `table1col` VARCHAR(45) NULL,
  PRIMARY KEY (`idtable1`),
  INDEX `ds` (`table1col` ASC),
  CONSTRAINT `fk_table1_1`
    FOREIGN KEY (`table1col`)
    REFERENCES `ppz`.`user` (`username`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `ppz` ;

-- -----------------------------------------------------
-- Placeholder table for view `ppz`.`view1`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ppz`.`view1` (`id` INT);

-- -----------------------------------------------------
-- View `ppz`.`view1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `ppz`.`view1`;
USE `ppz`;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
